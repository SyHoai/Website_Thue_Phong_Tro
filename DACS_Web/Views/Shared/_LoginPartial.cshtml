@using Microsoft.AspNetCore.Identity
@using DACS_Web.Models
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    string userId = User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier);
    ApplicationUser user = await UserManager.FindByIdAsync(userId);
    var isMember = User.IsInRole("Member");
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if(isMember)
    {
        <li class="nav-item">
            <label class="nav-link text-dark" style="border: 2px solid #ccc;border-radius: 10px;">
                 Số dư: @string.Format("{0:#,##0}", user.SoDu) đ
            </label>
        </li>
        
    }
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><img src="@user.Avatar" alt="Alternate Text" style="width:30px;height:30px;border-radius: 50%" /> @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
